---
# Source: cs-application-be/charts/qinsight-auth-chart/templates/qinsightauth_configmap.yaml
apiVersion: v1
data:
  config.json: |
       {
         "MongoDBconn": "mongodb://root:2108a185c5b4969394c9cc18308c72a9@172.29.101.136:27017/membershipDb?authMechanism=SCRAM-SHA-1&authSource=admin"
       }
kind: ConfigMap
metadata:
  namespace: production
  name: configmap-qinsightauth
---
# Source: cs-application-be/charts/qinsight-auth-chart/templates/qinsightauth_service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: production
  name: qinsightauth-srv
  labels:
    app: qinsightauth
spec:
  type: LoadBalancer
  # Find all pods
  selector:
    app: qinsightauth
  ports:
  # port:
  - name: http
    nodePort: 32736 
    port: 80
    targetPort: 8080
---
# Source: cs-application-be/charts/qinsight-auth-chart/templates/qinsightauth_deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: qinsightauth
  name: deploy-qinsightauth
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qinsightauth
  template:
    # Here's the definition of the pod:
    metadata:
      # The service finds all pods with matching metadata
      labels:
        app: qinsightauth
    spec:
      containers:
      - name: qinsightauth
        image: "srp.radcom-registry.com:5000/qinsightauth:1.0.0"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
---
# Source: cs-application-be/charts/qinsight-auth-chart/templates/qinsightauth_ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite /(qinsightauth)/(.*)$ /$1//$2 break;
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/auth-response-headers: iv-user, iv-groups, iv-remote-address
    nginx.ingress.kubernetes.io/auth-signin: https://$host/authenticationms/?link=https://$host/guardian/portal
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header iv-remote-address $remote_addr;
      proxy_set_header X-Real-IP $remote_addr;
      if ($http_cookie ~* "jwt=([^;]+)(?:;|$)") {
          set $token "$1";
      }
      proxy_set_header jwt $token;
    nginx.ingress.kubernetes.io/auth-url: http://authenticationms-srv.production.svc.cluster.local/api/v1/Authentication/authenticateToken
  name: qinsightauth-ing
  namespace: production
spec:
  rules:
    - host: kuberiq.com
      http:
        paths:
          - path: /qinsightauth
            pathType: Prefix
            backend:
              service: 
                name: qinsightauth-srv
                port:
                  number: 80
  tls:
    - hosts:
        - kuberiq.com
      secretName: tls-secret
