global:
  dockerRegistry: srp.radcom-registry.com:5000
  namespace: production
  chartSet: cs-oam-agent

# These values are handled by Orchestration team, and
# should not be modified !
  site: "default" # provided by external parameter
  blueprinttype: bp-oam-agent
  siteType: national
####

  mongoPort: 27017
  mongoUserName: root
  mongoDataBase: admin
  mongoPassword: 2108a185c5b4969394c9cc18308c72a9
  mongoComponentName: mongodb

  healthStorageClass: stc-health
  elasticStorageClass: stc-elastic
  generalStorageClass: local-storage
  objectStorageClass: stc-objectstorage

  appreleaseversion: 13.03.00.000.01

  ipFamilies:
    - ipv4

  vaultConfig:
    vaultDataServicePath: "http://kuberiq-home-vip/secretsms"
    vaultPathPrefix: "v1/radcom"

database-loader-chart:
  databaseLoader:
    enabled: true
  radcomConfiguration:
    databaseLoaderDeployment:
      resources:
        limits:
          cpu: 1000m
          memory: 2048M
        requests:
          cpu: 100m
          memory: 500M

alert-notification-ms-chart:
  enabled: true
  radcomConfiguration:
    alertnotificationms:
      resources:
        limits:
          cpu: 1
          memory: 128Mi
        requests:
          cpu: 0.1
          memory: 128Mi

oam-agent-chart:
  enabled: true
  radcomConfiguration:
    repoType: K8S
    resources:
        requestsCpu: 100m
        requestsMemory: 500Mi
        limitsCpu: 1600m
        limitsMemory: 500Mi
daemon-chart:
  enabled: true
  image:
    pullPolicy: IfNotPresent
    readOnly: true
  radcomConfiguration:
    daemonDeployment:
      resources:
        limits:
          cpu: 1000m
          memory: 2048M
        requests:
          cpu: 100m
          memory: 400M
  daemonConfig:
    scribe_ip: configmanager-srv
    scribe_port: 80
    api_gw_ip: configmanager-srv
    api_gw_port: 80
    xmlRulesUrl: "http://kuberiq-np-vip/api/v1/CentralConfigurationMS/DBConfiguration/GetXMLRules"
  podAnnotations: {}
  securityContext: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: {}
  tolerations: []
  affinity: {}

persistence-volume-exporter-chart:
  enabled: true

health-target-discovery-chart:
  enabled: true
  registry: srp.radcom-registry.com:5000
  image:
    repository: health-target-discovery
    tag: 1.0.0
  replicaCount: 1
  versionVM: 11.04.09.000.00
  resources:
    limits:
      memory: "200Mi"
      cpu: "1"
    requests:
      memory: "15Mi"
      cpu: "0.01"

schema-builder-chart:
  enabled: true
  schemaBuilderConfig:
    scribe_ip: configmanager-srv
    scribe_port: 80
    securityBasicEnabled: false
    securityUser: omniq
    securityPass: radcom
    api_gw_ip: kuberiq-home-vip
    api_gw_port: 80
    api_gw_service_path: /configManager
    healthAggregationScriptsPath: /radcom/omniq/aggregation-scripts
    healthKpiDefinitionsPath: /radcom/omniq/aggregation-scripts/KpiDefinitions.json
    healthCalcDuration: 300000
    healthAlarmDuration: 30000
    healthSampleFrequency: 1
    healthMachineGeneralInfoScript: sudo /radcom/scripts/health_stats.py
    enableCdrReduction: 1
    healthMachineStatusScriptExecutorWatchdogTimeOut: 10
  image:
    containerName: schema-builder
  radcomConfiguration:
    schemaBuilderDeployment:
      resources:
        requests:
          cpu: 100m
          memory: 500Mi
        limits:
          cpu: 1000m
          memory: 2048Mi

storageclass-exporter-chart:
  enabled: true
  pvclocalpaths:
    - name: storage
      path: /var/radcom/storage
    - name: volume
      path: /var/radcom/volume

  configMap:
    kafkaGroupId: conductor.aceagent.topology
    kafkaTopic: conductor.topology.update
    kafkaServer: eventbus-kafka:9092
    topologyManagerService: topology-manager-srv
    retryPeriod: 2000
    retryAttempts: 15
    frontendMachineTypes: vprobe,vLB,vLBAgent

  logConfig:
    logLevel: INFO

database-sync-chart:
  enabled: false
